{"version":3,"sources":["features/userSlice.js","firebase.js","inputOption.js","Post.js","Feed.js","HeaderOption.js","Header.js","Sidebar.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","inputOption","Icon","title","color","className","style","Post","forwardRef","ref","description","message","photoUrl","Avatar","src","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useSelector","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","type","onClick","preventDefault","add","displayName","email","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","HeaderOption","avatar","Header","dispatch","useDispatch","alt","placeholder","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationIcon","signOut","Sidebar","recentItem","topic","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.218fe668.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState:{\n    user:null,\n  },\n  reducers: {\n    login: (state,action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login,logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\n\n\nexport default userSlice.reducer;\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCrMFd_2H8x_Sw_OiqI9TcSbTmHOnBOnmc\",\r\n    authDomain: \"linkedin-clone-f9b46.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-f9b46\",\r\n    storageBucket: \"linkedin-clone-f9b46.appspot.com\",\r\n    messagingSenderId: \"324458867166\",\r\n    appId: \"1:324458867166:web:dc8d132fa97e8a0561554f\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n\r\nexport {db,auth};","import React from 'react';\r\nimport './inputOption.css';\r\n\r\nfunction inputOption({Icon,title,color}) {\r\n    return <div className=\"inputOption\">\r\n        <Icon style={{ color: color }}/>\r\n            <h4>{title}</h4>\r\n        </div>;   \r\n}\r\n\r\nexport default inputOption;\r\n","import {Avatar} from \"@material-ui/core\";\r\nimport React,{ forwardRef } from 'react';\r\nimport './Post.css';\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\r\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\nimport InputOption from \"./inputOption\";\r\n\r\nconst Post=forwardRef(({name, description,message,photoUrl},ref) => {\r\n    return (\r\n        <div ref={ref} className='post'>\r\n            <div className=\"post__header\">\r\n            <Avatar src={photoUrl}>{name[0]}</Avatar>\r\n            <div className=\"post__info\">\r\n                <h2>{name}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"post__body\">\r\n            <p>{message}</p>\r\n         </div>\r\n\r\n\r\n        <div className=\"post__button\">\r\n            <InputOption Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\r\n\r\n            <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\r\n\r\n            <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\r\n\r\n            <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\r\n        </div>\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Post;\r\n","import React,{useEffect ,useState} from 'react';\r\nimport './Feed.css';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport InputOption from \"./inputOption\";\r\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport Post from \"./Post\";\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase';\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectUser} from \"./features/userSlice\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nfunction Feed() {\r\n    const user= useSelector(selectUser);\r\n    const [input,setInput] = useState('');\r\n    const [posts,setPosts] = useState([]);\r\n         \r\n    useEffect(()=> {\r\n        db.collection('posts')\r\n        .orderBy(\"timestamp\",\"desc\")\r\n        .onSnapshot(snapshot=>(\r\n            setPosts(snapshot.docs.map(doc =>(\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n\r\n                }\r\n            )))\r\n        ))\r\n    }, []);\r\n\r\n    const sendPost = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection('posts').add({\r\n            name: user.displayName,\r\n            description: user.email,\r\n            message:input,\r\n            photoUrl:user.photoUrl || \"\",\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"feed\" >\r\n            <div className=\"feed__inputContainer\">\r\n                <div className=\"feed__input\">\r\n                    <CreateIcon />\r\n                    <form>\r\n                       <input value={input} onChange={e=> setInput(e.target.value)} type=\"text\" />\r\n                        <button onClick={sendPost} type='submit'>Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed__inputOptions\">\r\n                    <InputOption Icon={ImageIcon} title='Photo' color='#70B5F9' />\r\n\r\n                    <InputOption Icon={SubscriptionsIcon} title='Video' color='#E7A33E' />\r\n\r\n                    <InputOption Icon={EventNoteIcon} title='Event' color='#C0CBCD' />\r\n\r\n                    <InputOption Icon={CalendarViewDayIcon} title='Write article' color='#7FC15E' />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        {/* posts */}\r\n        <FlipMove>\r\n\r\n        {posts.map(({id,data: {name, description, message, photoUrl } }) => (\r\n            <Post \r\n            key={id}\r\n            name={name}\r\n            description={description}\r\n            message={message}\r\n            photoUrl={photoUrl}\r\n            \r\n            />\r\n            ))}\r\n        </FlipMove>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;\r\n","import React from 'react'\r\nimport \"./HeaderOption.css\";\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport {useSelector} from \"react-redux\"\r\nimport {selectUser} from \"./features/userSlice\";\r\n\r\nfunction HeaderOption({ avatar,Icon, title, onClick }) {\r\n    const user= useSelector(selectUser);\r\n\r\n\r\n    return (\r\n        <div onClick={onClick} className=\"headerOption\" >\r\n            {Icon && < Icon className=\"headerOption__icon\" />}\r\n            {avatar && \r\n               (<Avatar className=\"headerOption__icon\">{user?.email[0]}</Avatar>  \r\n               )}\r\n            <h3 className=\"headerOption__title\" >{title}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderOption;\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HeaderOption from './HeaderOption';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport NotificationIcon from \"@material-ui/icons/Notifications\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport {auth} from \"./firebase\";\r\nimport {logout,selectUser} from \"./features/userSlice\";\r\n\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n        const logoutOfApp =() => {\r\n            dispatch(logout())\r\n            auth.signOut();\r\n        }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <img \r\n                src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\" alt=\"\" />\r\n\r\n                <div className=\"header__search\">\r\n                        <SearchIcon/>\r\n                    <input placeholder='Search' type=\"text\" />\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div className=\"header__right\">\r\n                <HeaderOption Icon={HomeIcon} title=\"home\"/>\r\n\r\n                <HeaderOption Icon={SupervisorAccountIcon} title=\"Network\" />\r\n\r\n                <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\r\n\r\n                <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\r\n\r\n                <HeaderOption Icon={NotificationIcon} title=\"Notifications\" />\r\n                \r\n                <HeaderOption avatar={true} title=\"me\"\r\n                onClick={logoutOfApp}\r\n                />\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectUser} from \"./features/userSlice\";\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n    const user = useSelector(selectUser);\r\n\r\n    const recentItem =(topic) => (\r\n        <div className=\"sidebar__recentItem\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n          <div className=\"sidebar__top\">\r\n              <img \r\n              src=\"https://images.unsplash.com/photo-1579546929518-9e396f3cc809?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxleHBsb3JlLWZlZWR8MXx8fGVufDBBfHw%3D&w=1000&q=80   \" \r\n              alt=\"\" />\r\n              <Avatar src={user.photoUrl} className=\"sidebar__avatar\" >{user.email[0]}</Avatar>\r\n              <h2>{user.displayName}</h2>\r\n              <h4>{user.email}</h4>\r\n          </div>\r\n\r\n          <div className=\"sidebar__stats\">\r\n              <div className=\"sidebar__stat\">\r\n                  <p>Who views you</p>\r\n                  <p className=\"sidebar__statNumber\">1,101</p>\r\n              </div>\r\n\r\n              <div className=\"sidebar__stat\">\r\n                   <p>views on post </p>\r\n                   <p className=\"sidebar__statNumber\">1,000</p>\r\n              </div>\r\n          </div>\r\n\r\n        <div className=\"sidebar__bottom\">\r\n            <p>Recent</p>\r\n            {recentItem('reactjs')}\r\n            {recentItem('programming')}\r\n            {recentItem('softwareengineering')}\r\n            {recentItem('design')}\r\n            {recentItem('developer')}\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React,{useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {login} from \"./features/userSlice\";\r\nimport { auth } from \"./firebase\";\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n    const [email,setEmail]= useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [name,setName]=useState(\"\");\r\n    const [profilePic,setProfilePic]=useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const loginToApp = (e) => {\r\n        e.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(email,password)\r\n        .then(userAuth => {\r\n            dispatch(login({\r\n                email: userAuth.user.email,\r\n                uid: userAuth.user.uid,\r\n                displayName: userAuth.user.displayName,\r\n                profileUrl: userAuth.user.photoURL,\r\n            }));\r\n        }).catch(error => alert(error));\r\n\r\n\r\n    };\r\n    const register = () => {\r\n        if(!name){\r\n            return alert(\"Please enter a full name!\");\r\n        }\r\n            auth\r\n            .createUserWithEmailAndPassword(email,password)\r\n            .then((userAuth)=>{\r\n                userAuth.user.updateProfile({\r\n                    displayName: name,\r\n                    photoURL: profilePic,\r\n                })\r\n                .then(()=>{\r\n                    dispatch(login({\r\n                        email: userAuth.user.email,\r\n                        uid: userAuth.user.uid,\r\n                        displayName: name,\r\n                        photoUrl: profilePic,\r\n                    })\r\n                    );\r\n                });\r\n            }).catch((error) => alert(error));\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"login\" >\r\n            <img src=\"https://news.hitb.org/sites/default/files/styles/large/public/field/image/500px-LinkedIn_Logo.svg__1.png?itok=q_lR0Vks\" alt=\"\" />\r\n\r\n        <form>\r\n            <input\r\n            value={name}\r\n            onChange={(e)=> setName(e.target.value)}\r\n            placeholder=\"Full Name (required if registering)\"\r\n            type=\"text\" />\r\n\r\n            <input \r\n            value={profilePic}\r\n            onChange={(e)=> setProfilePic(e.target.value)}\r\n            placeholder=\"Profile pic URL (Optional)\" type='text' />\r\n\r\n            <input \r\n            value={email}\r\n            onChange={(e)=> setEmail(e.target.value)}\r\n            placeholder=\"Email\" type=\"email\"/>\r\n\r\n            <input \r\n            value={password}\r\n            onChange={(e)=> setPassword(e.target.value)}\r\n            placeholder=\"password\" type=\"password\" />\r\n\r\n            <button type=\"submit\" onClick={loginToApp} >Sign In</button>\r\n        </form>\r\n\r\n        <p>Not a Member? {\" \"}\r\n            <span className=\"login__register\" onClick={register} >Register Now</span>\r\n        </p>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './Widgets.css';\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nfunction Widgets() {\r\n    const newsArticle = (heading,subtitle) =>(\r\n        <div className=\"widgets__article\">\r\n            <div className=\"widgets__articleLeft\">\r\n                <FiberManualRecordIcon />\r\n            </div>\r\n\r\n            <div className=\"widgets__articleRight\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__header\">\r\n                <h2>LinkedIn News</h2>\r\n                <InfoIcon />\r\n            </div>\r\n            {newsArticle(\"Easy way to Learn Redux\",\"LinkedIn-clone\")}\r\n\r\n            {newsArticle(\"Coronavirus: India updates\",\"Top news - 999 records\")}\r\n\r\n            {newsArticle(\"Bitcoin Breaks $22k\",\"crypto - 400 readers\")}\r\n\r\n            {newsArticle(\"Tesla in India\",\"soon lounch new car\")}\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets;\r\n","import React, {useEffect} from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport './App.css';\nimport { login,logout,selectUser } from \"./features/userSlice\";\nimport {auth} from \"./firebase\";\nimport Feed from './Feed';\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport Login from \"./Login\";\nimport Widgets from \"./Widgets\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    auth.onAuthStateChanged(userAuth => {\n      if(userAuth){\n        dispatch(login({\n          email:userAuth.email,\n          uid:userAuth.uid,\n          displayName:userAuth.displayName,\n          photoUrl:userAuth.photoURL,\n        }))\n      }else{\n        dispatch(logout());\n      }\n    });\n  },[]);\n\n  return (\n    <div className=\"app\">\n       <Header />\n\n       {!user ? (\n       <Login /> \n       ) : (\n        <div className=\"app__body\">\n        <Sidebar />\n        <Feed />   \n        <Widgets />       \n    </div>\n       )}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/userSlice\";\n\n\nexport default configureStore({\n    reducer: {\n        user: userReducer,\n    },\n});\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}